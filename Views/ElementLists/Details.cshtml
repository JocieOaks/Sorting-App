@model Sorting_App.Models.ElementList

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>
<p>
    <a asp-controller="Elements" asp-action="Create" asp-route-id="@Model.ID">Create New</a> | @{
        Sort? sort = Model.Sorts.FirstOrDefault();
        if (sort == default)
        {
            <a asp-action="StartSort" asp-route-id="@Model.ID">Sort</a>
        }
        else if(!sort.IsSorted)
        {
            <a asp-action="Compare" asp-route-id="@sort.ID">Continue Sort</a> <a>|</a> <a asp-action="StartSort" asp-route-id="@Model.ID">Restart Sort</a>
        }
        else
        {
            <a asp-action="StartSort" asp-route-id="@Model.ID">Re-Sort</a>
        }
    }
</p>
<div class="flex-container">
    @{
        if (sort != default && sort.IsSorted)
        {
            <partial name="~/Views/Elements/Index.cshtml" model="Select_Sort.SelectSort.GetOrdereredList(sort.SelectElements.ToArray(), sort.ElementComparisons)" />
        }
        else
        {    
            <partial name="~/Views/Elements/Index.cshtml" model="Model.Elements"/>
        }
    }
    <div class="tags">
        @foreach (ElementTag tag in Model.Tags)
        {
            @Html.DisplayFor(x => tag.Tag)
        }
    </div>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.ID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
